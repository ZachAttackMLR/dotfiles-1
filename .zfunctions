#################
# zsh Functions #
#################

#####
# fzf
#####

# fo [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fo() {
	local files
	IFS=$'\n' files=($(fzf --preview="cat {}" --preview-window=right:70%:wrap --query="$1" --multi --select-1 --exit-0))
	[[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# fman [FUZZY PATTERN] - Search man pages.
fman() {
	man -k . | fzf --prompt='Man> ' | awk '{print $1}' | cut -d "(" -f1 | xargs man
}


#####
# git
#####

# gi [OS,LANGUAGE,ETC]
function gi() {
	curl -sLw "\n" https://www.gitignore.io/api/"$@" ;
}

#####
# Backup Dotfiles
#####

# backup-dots [COMMIT MESSAGE]
function backup-dots() {
	echo "Backing up..."
	(
	shallow-backup -no_splash -dotfiles -separate_dotfiles_repo;
	cd "$HOME/shallow-backup/dotfiles/" || exit
	git add .

	# If no commit message is provided, open vim.
	# Otherwise, commit with the provided message
	commit_msg="$1"
	if [ -z "$commit_msg" ] ; then
		git commit --verbose
	else
		git commit -m "$commit_msg"
	fi
	git push
	)
}

######
# Misc
######

# Make a directory and cd into it.
mk() {
	mkdir "$1" && cd "$1" || exit;
}

#  vim: set ts=4 sw=4 tw=0 syntax=zsh noet :
